#Set to 0, because we want a random port number to be assigned to the serve
#if port number is provided in as command line argument, otherwise zero
server.port=${PORT:0}
# This name would be registered in eureka server
spring.application.name=users-ws
# This url with which eureka client communicates with eureka server
eureka.client.service-url.defaultZone=http://localhost:8010/eureka
spring.devtools.restart.enabled=true

#instance id will be the unique id that will identify the running instance of the microservice
# If the instance id is provided as command line argument, other wise random
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

spring.datasource.url=jdbc:postgresql://localhost:5432/microservices
spring.datasource.username=postgres
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=create


token.expiration_time=3600
token.secret=dgjorufhrsnjdu438fkdj38fdmcv7dm3ckvhrsnjjuwelueivhe848fhedldh5ndk

login.url.path=/users/login

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#management.endpoints.web.exposure.include=beans,health,mappings,httpexchanges
management.endpoints.web.exposure.include=*
#default is true
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

#To enable debug for feign
logging.level.com.appsdeveloperblog.photoapp.api.users.data.AlbumsServiceClient=DEBUG

#Resilience4j configs:
#Failure rate in %, when failure rate is => this threshold, c.b->open state
resilience4j.circuitbreaker.instances.albums-ws.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.albums-ws.automatic-transition-from-open-to-half-open-enabled=true
#Time to wait from open to half open
resilience4j.circuitbreaker.instances.albums-ws.wait-duration-in-open-state=10000ms

#aspect-order change
resilience4j.circuitbreaker.circuit-breaker-aspect-order=1
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.albums-ws.sliding-window-size=2
resilience4j.circuitbreaker.instances.albums-ws.minimum-number-of-calls=1
resilience4j.circuitbreaker.instances.albums-ws.event-consumer-buffer-size=10
#aspect-order change : Higher value=Higher priority
resilience4j.retry.retry-aspect-order=2
#Retyr configurations
resilience4j.retry.instances.albums-ws.max-attempts=3
#wating time before retry
resilience4j.retry.instances.albums-ws.wait-duration=2s
#Exponentially increases the wait time with each retry upto a max back off time
#After sending the first request, feignClient will wait for 2s and then second req will be sent, and after 2*5=10s, 3rd req will be sent
resilience4j.retry.instances.albums-ws.enable-exponential-backoff=true
resilience4j.retry.instances.albums-ws.exponential-backoff-multiplier=5

#Zipkin config:
#To set tracing % (1=full tracing, 0=no tracing, 0.1=10% tracing)
management.tracing.sampling.probability=1
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.level.com.appsdeveloperblog.photoapp.api.users.service.UsersServiceImpl=DEBUG

logging.file.name=users-ws.log



